name: Build Pin Randomizer Binaries (Manual)

on:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install pyinstaller

      - name: Build Windows executable
        shell: cmd
        run: |
          pyinstaller --onefile --noconsole ^
            --icon=pin-randomizer/src/icon.ico ^
            --name=NTM-pin-randomizer-v0.0.0-patcher ^
            pin-randomizer/src/randomize-pins.py

      - name: Zip artifact
        shell: pwsh
        run: |
          Compress-Archive -Path dist/NTM-pin-randomizer-v0.0.0-patcher.exe -DestinationPath NTM-pin-randomizer-v0.0.0-windows.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: NTM-pin-randomizer-v0.0.0-windows
          path: NTM-pin-randomizer-v0.0.0-windows.zip

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install pyinstaller pillow

      - name: Build macOS app
        run: |
          pyinstaller --onefile --windowed \
            --icon=pin-randomizer/src/icon.icns \
            --name=NTM-pin-randomizer-v0.0.0-patcher \
            pin-randomizer/src/randomize-pins.py

      - name: Zip artifact
        run: zip NTM-pin-randomizer-v0.0.0-macos.zip dist/NTM-pin-randomizer-v0.0.0-patcher

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: NTM-pin-randomizer-v0.0.0-macos
          path: NTM-pin-randomizer-v0.0.0-macos.zip

  build-linux-x64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install pyinstaller

      - name: Build Linux x64 executable
        run: |
          pyinstaller --onefile \
            --name=NTM-pin-randomizer-v0.0.0-patcher \
            pin-randomizer/src/randomize-pins.py

      - name: Zip artifact
        run: zip NTM-pin-randomizer-v0.0.0-linux-x64.zip dist/NTM-pin-randomizer-v0.0.0-patcher

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: NTM-pin-randomizer-v0.0.0-linux-x64
          path: NTM-pin-randomizer-v0.0.0-linux-x64.zip

  build-linux-arm64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Enable QEMU for ARM64 emulation
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Build in Docker for ARM64
        run: |
          docker run --rm --platform linux/arm64 \
            -v "$(pwd)":/src \
            -w /src \
            arm64v8/python:3.11-slim \
            bash -c "apt-get update && apt-get install -y build-essential && \
                     pip install pyinstaller && \
                     pyinstaller --onefile \
                       --name=NTM-pin-randomizer-v0.0.0-patcher \
                       pin-randomizer/src/randomize-pins.py"

      - name: Zip artifact
        run: zip NTM-pin-randomizer-v0.0.0-linux-arm64.zip dist/NTM-pin-randomizer-v0.0.0-patcher

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: NTM-pin-randomizer-v0.0.0-linux-arm64
          path: NTM-pin-randomizer-v0.0.0-linux-arm64.zip
